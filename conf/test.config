/* 
 -------------------------------------------------
 iMPP Nextflow test config file
 -------------------------------------------------

 Defines bundled input files and everything required
 to run a fast and simple test.
*/

params
{

	config_profile_name        = 'Test profile'
	config_profile_description = 'iMPP test workflow'


	single = "$projectDir/data/reads.fq.gz"
	outdir = "$projectDir/output"
	genecaller = "both"
	threads = 1
	maxlen = 150
	spadesdir = "spades"
	freq = 120
	kmin = 55
	tmpdir = './intermediate'
	intermediate = false
	help = false

	//tags
	fgs_tag = "fgs"
	mpd_tag = "mpd"

	edge_out = "edges"
	path_out = "paths"

	fgs = false
	mpd = false

	paired = 0



	
	/**fgs parameters **/
	// FGS  complete genomic sequence option (0:short sequences, 1:complete genomic sequences)
	 fgs_mode = 0
	 // FGS train option (complete, sanger_5, sanger_10, 454_10, 454_30, illumina_5, or illumina_10)
	 // FGS illumina_5 option for input reads. Rest of the runs are in complete mode by default.
	 fgs_train = "illumina_10"
	 // testing frag mode for all other runs
	 fgs_train_other = "illumina_10"
	 fgs_train_complete = "complete"
	 // Filter out FGS ORF prediction with indels (1:true or 0:false).
	 fgs_dropindel = 0
	
	
	
	/* SGA Assembly parameters */ 
	// minimum overlap required between two reads
	sga_overlap_min_len = 20
	 // Only use overlaps of at least LEN. This can be used to filter the overlap set
	 // so that the overlap step only needs to be run once.
	 sga_assemble_min_len = 40
	
	
	/** SPAdes Assembly parameters **/
	// RAM limit for SPAdes in Gb (terminates if exceeded)
	spades_memory_limit = 500
	//comma-separated list of k-mer sizes <int, int,..>(must be odd and less than 128) [default: 'auto']
	spades_kmer = "auto"
	
	
	/*----------------------------
	 Mapping Options
	----------------------------*/
	// BWA-mem mapping Options (1:true or 0:false)
	// minimum seed length
	bwa_min_seed = 19
	// minimum score to output -- 65 for gut
	bwa_min_score = 70
	
	
	/** Plass assembly parameters **/
	// 1: Assemble protein sequences by iterative greedy overlap assembly.
	// 0: Assemble nucleotide sequences by iterative greedy overlap assembly
	plass_assemble = 1
	// minimum codon number in open reading frames
	plass_min_length = 20
	// number of iterations
	plass_num_iter = 12
	
}
