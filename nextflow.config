/*
	iMPP: integrated Metagenomic Protein Predictor
	
	For any bugs or problems found, please contact us at
	- sirisha.thippabhotla@ku.edu 
*/

params
{

config_profile_name        = 'Default profile'
config_profile_description = 'iMPP default workflow'

/**fgs parameters **/
// FGS  complete genomic sequence option (0:short sequences, 1:complete genomic sequences)
fgs_mode = 0
// FGS train option (complete, sanger_5, sanger_10, 454_10, 454_30, illumina_5, or illumina_10)
// FGS illumina_5 option for input reads. Rest of the runs are in complete mode by default.
fgs_train = "illumina_10"
fgs_train_other = "illumina_10"
fgs_train_complete = "complete"


/* SGA Assembly parameters */ 
sga_disk = 1000000
// minimum overlap required between two reads
sga_overlap_min_len = 20
//error correction
sga_correct_algo = 0
sga_correct_kmer = 15
//Overlap correction params- minimum overlap required between two reads
sga_correct_min_olap = 10
// Only use overlaps of at least LEN. This can be used to filter the overlap set
// so that the overlap step only needs to be run once.
sga_assemble_min_len = 40


/** SPAdes Assembly parameters **/
// RAM limit for SPAdes in Gb (terminates if exceeded)
spades_memory_limit = 500
//comma-separated list of k-mer sizes <int, int,..>(must be odd and less than 128) [default: 'auto']
spades_kmer = "auto"
spades_assembly = "null"

//----------------------------
// Mapping Options
//----------------------------
// BWA-mem mapping Options (1:true or 0:false)
// minimum seed length
bwa_min_seed = 19
// minimum score to output -- 65 for gut
bwa_min_score = 70


/** Plass assembly parameters **/ 1
// 1: Assemble protein sequences by iterative greedy overlap assembly.
// 0: Assemble nucleotide sequences by iterative greedy overlap assembly
plass_assemble = 1
// minimum codon number in open reading frames
plass_min_length = 20
// number of iterations
plass_num_iter = 12

}


/* 	Containers */
/*--------------------------------*/
process {
withName: mergeFastqFiles{
        container = "staphb/seqtk:latest"
}

withName:callMPD{
	container = "nanozoo/prodigal:latest"
}

withName:callMPDRead{
	container = "nanozoo/prodigal:latest"
}

withName:callFGS{
	container = "tsirisha/fraggenescan:latest"
}
withName:callFGSRead{
	container = "tsirisha/fraggenescan:latest"
}

withName:callSGAAssembly{
	container= "tsirisha/sga:v.0.10.15"
}

withName:callSPAdesAssembly{
	container= "staphb/spades:3.15.3"
}

withName:peptideAssembly_first{
	container = "tsirisha/plass:latest"
}

withName:peptideAssembly_second{
	container = "tsirisha/plass:latest"
}

withName:alignSixFrametoAssembly{
	container = "nanozoo/diamond:latest"
}

withName:callBWA{
	container = "biocontainers/bwa:v0.7.17_cv1"
}

}


/** Setting up profiles **/

profiles{
// Enables Docker
  docker {
    docker.enabled = true
    // Avoid this error:
    // WARNING: Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
    // Testing this in nf-core after discussion here https://github.com/nf-core/tools/pull/351
    // once this is established and works well, nextflow might implement this behaviour as new default.
    docker.runOptions = '-u \$(id -u):\$(id -g)'
	// If you still get the error above, please decomment the following line (thanks to Flavia Flaviani; https://github.com/flacchy)
	// docker.runOptions = "--memory-swap '-1'"
  }
  test{
	  includeConfig 'conf/test.config'

  }
  base{
	  includeConfig 'conf/base.config'
  }
}

executor{
	name = 'local'
}

trace {
    enabled = true
}

timeline {
  enabled = true
}

report {
  enabled = true
}


